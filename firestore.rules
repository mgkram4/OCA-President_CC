rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Users collection: each user document's ID should be the user's auth UID.
    match /users/{uid} {
      // Anyone authenticated can create their own user document when signing up.
      allow create: if request.auth != null && request.auth.uid == uid;

      // Users can read their own document and update non-role fields.
      allow read: if request.auth != null && request.auth.uid == uid;

      // Allow user to update their own profile, but prevent changing the role field.
      allow update: if request.auth != null && request.auth.uid == uid
                    && !(request.resource.data.keys().hasAny(['role']) && request.resource.data.role != resource.data.role);

      // Allow admins (custom claim role == 'admin') to update any field and delete users.
      allow update, delete: if request.auth != null && request.auth.token.role == 'admin';
    }

    // Rules for any other collections: deny by default unless specifically allowed below.
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
